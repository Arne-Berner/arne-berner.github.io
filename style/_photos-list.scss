/* Reset and base */
*,
*::before,
*::after { box-sizing: border-box; }

html, body {
  height: 100%;
  margin: 0;
  background: #000; /* Avoids flash around image edges */
  color: #fff;
}

/* Viewport container that controls cropping */
.viewport {
  position: relative;
  height: calc(100vh - var(--nav-h) - 4px);   /* Fallback */
  height: calc(100dvh - var(--nav-h) - 4px);  /* Dynamic viewport height */
  overflow: hidden;
  background: #000;
}

/* Use a figure to keep semantics and allow an overlay caption */
.hero {
  position: relative;
  width: 100%;
  height: 100%;
  margin: 0;
}

/* Image behavior:
   - Always match viewport height
   - Maintain aspect ratio
   - Center horizontally
   - Extra width is hidden (equal cropping on both sides)
*/
.hero > img {
  position: absolute;
  top: 0;
  left: 50%;
  height: 100%;
  width: auto;
  transform: translateX(-50%);
  display: block;
  user-select: none;
  -webkit-user-drag: none;
}

/* Copyright overlay */
.copyright {
  position: absolute;
  right: max(16px, env(safe-area-inset-right));
  bottom: max(16px, env(safe-area-inset-bottom));
  background: color-mix(in srgb, #000 60%, transparent);
  padding: 8px 12px;
  border-radius: 8px;
  font-size: clamp(12px, 1.6vw, 16px);
  line-height: 1.2;
  color: #fff;
  text-shadow: 0 1px 2px rgba(0,0,0,.6);
  pointer-events: none; /* make sure overlay doesn't block gestures */
}

/* High-DPI sharpening (optional) */
@supports (image-rendering: -webkit-optimize-contrast) {
  .hero > img { image-rendering: -webkit-optimize-contrast; }
}
