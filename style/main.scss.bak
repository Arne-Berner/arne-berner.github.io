/*
What I want: 
The navbar should stay on top
the Menu button should be on the right side, so I'll need a grid
when the menu button is opened a grid with 3 rows should appear beneath it, and it should expandkjk
*/
:root {
    --nav-bg: rgba(255, 255, 255, 0.85);
    --text: #111;
    --muted: #666;
    --border: #eaeaea;
    --shadow: 0 10px 30px rgba(0,0,0,0.06);
    --radius: 12px;
}

// navbar
.nav {
    position: sticky;
    top: 0;
    z-index: 1000;
    background: var(--nav-bg);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid var(--border);
}

.nav-inner {
    margin: 0 auto;
    padding: 0 16px;
    height: auto;
    min-height: 60px;
    display: grid;
    // might need more columns for this to make sence,
    // but I also just want the columns to be justified to some side?
    // fr is a fractional unit of the available space
    //grid-template-rows: 60px minmax(20px,1fr) 100px; // repeat(2 100px) repeats 100px twice
    // grid-template-rows: 60px minmax(20px,1fr) 100px; // repeat(2 100px) repeats 100px twice
    grid-template-columns: auto auto;
    /*
    grid-template-area:
      'space burger'
      'space menu'
    */  
    /*
    // this will name the rows and columns, they can now be referenced inside the items via
    // grid-area: photos;
    grid-template-area: 
      'space menu-name burger'
      'space vita vita'
      'space photos photos'
      'space showreel showreel'
      'space contact contact';
    */
    // justify-items: end // or start or stretch(default) or baseline
    // align-items: center
    // justify and align-content will place the container inside the container it is.
    // it takes start end center baseline space-between space-around and space-evenly as an argument
    // grid-gap: 1em, 3em; // grid gap row & column
    // grid-auto-rows: 100px; // this will create new rows as necessary with 100px wide
    // grid-auto-columns: 100px; // this will create new columns as necessary with 100px wide
    // grid-auto-flow: column; // this will make new items start in a new column instead of row
    column-gap: 10px;
}

/*
// Responsive grid without media queries
.container{
  display: grid;
  grid-template-rows: repeat(4, 100px);
  grid-template-columns: repeat(auto-fit, minmax(100px,1fr));

}
*/


.burger {
    // grid-area: burger;
    grid-column: 1 / -1;
    width: 44px;
    height: 44px;
    border: 1px solid var(--border);
    background: white;
    border-radius: 10px;
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    gap: 5px;
    cursor: pointer;
    transition: box-shadow .15s ease, transform .15s ease;
}

.burger:hover {
    box-shadow: var(--shadow);
}

.burger:active {
    transform: translateY(1px);
}

.burger span {
    display: block;
    width: 20px;
    height: 2px;
    background: var(--text);
    border-radius: 2px;
    transition: transform .2s ease, opacity .2s ease;
    transform-origin: center;
}

/* Animate into X when open */
.burger[aria-expanded="true"] span:nth-child(1) {
    transform: translateY(7px) rotate(45deg);
}
.burger[aria-expanded="true"] span:nth-child(2) {
    opacity: 0;
}
.burger[aria-expanded="true"] span:nth-child(3) {
    transform: translateY(-7px) rotate(-45deg);
}

.menu {
    right: auto;
    top: auto;
    grid-column: 2 / -1;
    display: none;
    align-items: center;
    justify-content: end;
    gap: 2px;
    background: transparent;
    border: 0;
    box-shadow: none;
    // maybe more padding?
    padding: 8px 0 0;
}

.menu.open {
    display: flex;
    animation: fadeIn 2s ease-out;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-20px); }
    //from { opacity: 0; transform: translateY(-4px); }
    to { opacity: 1; transform: translateY(0); }
}

.menu a {
    padding: 10px 12px;
    text-decoration: none;
    color: var(--text);
    border-radius: 8px;
    // only hover feedback?
    transition: background 2.12s ease, color 2.12s ease;
    font-weight: 500;
}

.menu a:hover {
    background: #f7f7f7;
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
    .burger span,
    .menu.open { transition: none; animation: none; }
}

.name {
    user-select: none;
    text-wrap-mode: nowrap;
}

// photos
.photos-list {
  display: grid;
}
